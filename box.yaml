---
AWSTemplateFormatVersion: '2010-09-09'
Description: Workstation
Mappings:
  AWSRegion2AMI:
    eu-central-1:
      AMI: ami-0bdf93799014acdc4
Parameters:
  InstanceType:
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.medium
    - c5.xlarge
    - m5.large
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.micro
    Description: Instance type for EC2 instance.
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: box
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  HostedZone:
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: can contain only ASCII characters.
    Default: piotr.is.
    Description: zone name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  IP:
    ConstraintDescription: must be an IP address
    Description: IP address to which the SG will be open (SSH/Mosh)
    Type: String
Resources:
  EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ AWSRegion2AMI, !Ref "AWS::Region", AMI ]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: [!Ref SecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 20  # for them dockerz
      Tags:
      - Key: Name
        Value: !Join [ "-", [EC2, !Ref "AWS::StackName"] ]
      UserData:
        Fn::Base64: !Sub |
          #cloud-config
          write_files:
            - content: |
                PATH="/home/ubuntu/.local/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                LC_ALL=en_US.UTF-8
                LANG=en_US.UTF-8
                DEBIAN_FRONTEND=noninteractive
              path: /etc/environment

          package_update: true

          package_upgrade: true

          packages:
            - awscli
            - build-essential
            - curl
            - git
            # - haskell-stack
            - htop
            - mc
            - mosh
            - openssh-server
            - python
            - python-pip
            - python-setuptools
            - python-wheel
            - python3
            - python3-pip
            - python3-setuptools
            - python3-wheel
            - silversearcher-ag
            - software-properties-common
            - tmux
            - tzdata
            - wget
            - zsh

          runcmd:
            - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
            # - usermod -a -G docker ubuntu
            # - curl -L https://julialang-s3.julialang.org/bin/linux/x64/1.1/julia-1.1.0-linux-x86_64.tar.gz | tar -zxv
            # - ln -s /home/ubuntu/julia-1.1.0/bin/julia /usr/local/bin/julia
            - ln -fs /usr/share/zoneinfo/Europe/Amsterdam /etc/localtime
            - dpkg-reconfigure -f noninteractive tzdata
            - curl -L https://github.com/neovim/neovim/releases/download/v0.3.7/nvim.appimage -o /usr/bin/nvim
            - pip2 install neovim
            - pip3 install neovim
            - git clone https://github.com/robbyrussell/oh-my-zsh.git /home/ubuntu/.oh-my-zsh
            - cp /home/ubuntu/.oh-my-zsh/templates/zshrc.zsh-template /home/ubuntu/.zshrc
            - usermod -s /bin/zsh ubuntu
            - curl -L https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -C /usr/local -zxv
            - git clone --depth 1 https://github.com/junegunn/fzf.git /home/ubuntu/.fzf
            - ./home/ubuntu/.fzf/install --key-bindings --completion --update-rc
            - git clone https://github.com/pkazmierczak/configs.git /home/ubuntu/configs
            - curl -fLo /home/ubuntu/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            - ln -s /home/ubuntu/configs/.vim/init.vim /home/ubuntu/.config/nvim/init.vim
            - echo "some ssh key" >> /home/ubuntu/.ssh/authorized_keys
            - chown -R ubuntu:ubuntu /home/ubuntu
            - LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 mosh-server

  EIPAssociation:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: !Ref Instance
  SecurityGroup:
    Properties:
      GroupDescription: 'Enable access to the instance. '
      SecurityGroupIngress:
      - CidrIp: !Sub '${IP}/32'
        FromPort: '60000'
        IpProtocol: udp
        ToPort: '61000'
      - CidrIp: !Sub '${IP}/32'
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: !Sub '${IP}/32'
        FromPort: '8888'
        IpProtocol: tcp
        ToPort: '8888'
      Tags:
      - Key: Name
        Value: !Join [ "-", [SG, !Ref "AWS::StackName"] ]
    Type: AWS::EC2::SecurityGroup
  MyDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: CNAME for the server
      Name: !Join [ ".", [!Ref "AWS::StackName", !Ref HostedZone] ]
      Type: A
      TTL: 300
      ResourceRecords: [ !Ref EIP ]
